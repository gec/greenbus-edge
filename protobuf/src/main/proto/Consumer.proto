syntax = "proto3";

package edge.consumer;

import "LogicalModel.proto";
import "Value.proto";

option java_package = "io.greenbus.edge.api.consumer.proto";
option java_multiple_files = true;

message ClientToServerMessage {
    map<uint64, SubscriptionParams> subscriptions_added = 1;
    repeated uint64 subscriptions_removed = 2;

    repeated ClientOutputRequest output_requests = 5;
}
message ServerToClientMessage {
    map<uint64, EdgeUpdateSet> subscription_notification = 1;

    map<uint64, edge.OutputResult> output_responses = 5;
}

message EdgeUpdateSet {
    repeated IdentifiedEdgeUpdate updates = 1;
}

message ClientOutputRequest {
    edge.EndpointPath id = 1;
    edge.OutputParams request = 2;
    uint64 correlation = 3;
}

message SubscriptionParams {
    repeated edge.Path endpoint_prefix_set = 1;
    repeated edge.EndpointId endpoint_descriptors = 2;
    repeated edge.EndpointPath data_keys = 3;
    repeated edge.EndpointPath output_keys = 4;
    repeated edge.EndpointDynamicPath dynamic_data_keys = 5;
}

enum StatusType {
    PENDING = 0;
    DATA_UNRESOLVED = 1;
    RESOLVED_ABSENT = 2;
    RESOLVED_VALUE = 3;
}

message IdentifiedEdgeUpdate {
    oneof type {
        IdEndpointUpdate endpoint_update = 1;
        IdDataKeyUpdate data_key_update = 2;
        IdOutputKeyUpdate output_key_update = 3;

        IdEndpointPrefixUpdate endpoint_prefix_update = 4;

        IdDynamicDataKeyUpdate dynamic_data_key_update = 5;
    }
}

message DataKeyUpdate {
    edge.DataKeyDescriptor descriptor_update = 1;
    oneof types {
        KeyValueUpdate key_value_update = 2;
        SeriesUpdate series_update = 3;
        TopicEventUpdate topic_event_update = 4;
        ActiveSetUpdate active_set_update = 5;
    }
}

message OutputKeyUpdate {
    edge.OutputKeyDescriptor descriptor_update = 1;
    edge.OutputKeyStatus status_update = 2;
}

message IdEndpointUpdate {
    edge.EndpointId id = 1;
    StatusType type = 2;
    edge.EndpointDescriptor value = 3;
}
message IdDataKeyUpdate {
    edge.EndpointPath id = 1;
    StatusType type = 2;
    DataKeyUpdate value = 3;
}
message IdOutputKeyUpdate {
    edge.EndpointPath id = 1;
    StatusType type = 2;
    OutputKeyUpdate value = 3;
}

message IdDynamicDataKeyUpdate {
    edge.EndpointDynamicPath id = 1;
    StatusType type = 2;
    DataKeyUpdate value = 3;
}

message KeyValueUpdate {
    edge.data.Value value = 1;
}
message SeriesUpdate {
    edge.data.SampleValue value = 1;
    uint64 time = 2;
}
message TopicEventUpdate {
    edge.Path topic = 1;
    edge.data.Value value = 2;
    uint64 time = 3;
}

message MapKeyPair {
    edge.data.IndexableValue key = 1;
    edge.data.Value value = 2;
}

message ActiveSetUpdate {
    repeated MapKeyPair value = 1;
    repeated edge.data.IndexableValue removes = 2;
    repeated MapKeyPair adds = 3;
    repeated MapKeyPair modifies = 4;
}

message IdEndpointPrefixUpdate {
    edge.Path id = 1;
    StatusType type = 2;
    EndpointSetUpdate value = 3;
}

message EndpointSetUpdate {
    repeated edge.EndpointId value = 1;
    repeated edge.EndpointId removes = 2;
    repeated edge.EndpointId adds = 3;
}

message KeySetUpdate {
    repeated edge.EndpointPath value = 1;
    repeated edge.EndpointPath removes = 2;
    repeated edge.EndpointPath adds = 3;
}
